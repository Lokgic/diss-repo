trueparm = sample(c(0.1,0.5,0.9),xn,replace=TRUE)
for (i in 1:xn){
dist = c(1/3,1/3,1/3)
for (j in 1:yn){
exv[i][j] = exv(dist,trueparm[i])
dist = valsimupdate(dist)
}
}
yn = 10
xn = 500
exv = matrix(nrow = xn, ncol = yn)
trueparm = sample(c(0.1,0.5,0.9),xn,replace=TRUE)
for (i in 1:xn){
dist = c(1/3,1/3,1/3)
for (j in 1:yn){
exv[i][j] = exFn(dist,trueparm[i])
dist = valsimupdate(dist)
}
}
yn = 10
xn = 500
exv = matrix(nrow = xn, ncol = yn)
trueparm = sample(c(0.1,0.5,0.9),xn,replace=TRUE)
for (i in 1:xn){
dist = c(1/3,1/3,1/3)
for (j in 1:yn){
exv[i][j] = getexpected(dist)
dist = valsimupdate(dist,trueparm[i])
}
}
warnings()
exv
yn = 10
xn = 500
exv = matrix(nrow = xn, ncol = yn)
trueparm = sample(c(0.1,0.5,0.9),xn,replace=TRUE)
for (i in 1:xn){
dist = c(1/3,1/3,1/3)
for (j in 1:yn){
exv[i,j] = getexpected(dist)
dist = valsimupdate(dist,trueparm[i])
}
}
exv
yn = 10
xn = 500
exv = matrix(nrow = xn, ncol = yn)
trueparm = sample(c(0.1,0.5,0.9),xn,replace=TRUE)
for (i in 1:xn){
dist = c(1/3,1/3,1/3)
for (j in 1:yn){
exv[i,j] = getexpected(dist)
dist = valsimupdate(dist,rbinom(1,1,trueparm[i]))
}
}
exv
yn = 20
xn = 500
exv = matrix(nrow = xn, ncol = yn)
trueparm = sample(c(0.1,0.5,0.9),xn,replace=TRUE)
for (i in 1:xn){
dist = c(1/3,1/3,1/3)
for (j in 1:yn){
exv[i,j] = getexpected(dist)
dist = valsimupdate(dist,rbinom(1,1,trueparm[i]))
}
}
exv
exv[1,]
yn = 15
xn = 500
exv = matrix(nrow = xn, ncol = yn)
trueparm = sample(c(0.1,0.5,0.9),xn,replace=TRUE)
for (i in 1:xn){
dist = c(1/3,1/3,1/3)
for (j in 1:yn){
exv[i,j] = getexpected(dist)
dist = valsimupdate(dist,rbinom(1,1,trueparm[i]))
}
}
exv[1,]
t = data.frame()
t
t[1]
t[.1]
t[,1]
t[1,1]
t[1,1] = 1
t
t[1,2] = 1
yn = 15
xn = 500
exv = data.frame
trueparm = sample(c(0.1,0.5,0.9),xn,replace=TRUE)
for (i in 1:xn){
dist = c(1/3,1/3,1/3)
for (j in 1:yn){
exv[i,j] = getexpected(dist)
dist = valsimupdate(dist,rbinom(1,1,trueparm[i]))
}
}
exv
yn = 15
xn = 500
exv = data.frame()
trueparm = sample(c(0.1,0.5,0.9),xn,replace=TRUE)
for (i in 1:xn){
dist = c(1/3,1/3,1/3)
for (j in 1:yn){
exv[i,j] = getexpected(dist)
dist = valsimupdate(dist,rbinom(1,1,trueparm[i]))
}
}
exv
View(exv)
install.packages("ggplot2")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
ggplot(exv, aes(1))
g = ggplot(exv)
g
g + geom_line(aes(y=1))
g + geom_line(aes(y="1"))
exv$V1
exv$1
yn = 15
xn = 500
exv = data.frame()
trueparm = sample(c(0.1,0.5,0.9),xn,replace=TRUE)
for (i in 1:xn){
dist = c(1/3,1/3,1/3)
for (j in 1:yn){
exv[j,i] = getexpected(dist)
dist = valsimupdate(dist,rbinom(1,1,trueparm[i]))
}
}
View(exv)
ggplot(exv,aes(1:15))
ggplot(exv,aes(1:15)) + geom_line(aes(y=V1))
ggplot(exv,aes(1:15)) + geom_line(aes(y=V2))
ggplot(data=exv,aes(x=1:15,y=value,color=variable))
ggplot(data=exv,aes(x=1:15,y=y,color=variable))
ggplot(data=exv,aes(x=1:15,color=variable))
ggplot(data=exv,aes(x=1:15))
ggplot(data=exv,aes(x=1:15)) + geom_line()
ggplot(exv,aes(1:15)) + geom_line(aes(y=V1))
ggplot(exv,aes(1:15)) + geom_line(aes(y=V1),color=trueparm[1])
color
ggplot(exv,aes(1:15)) + geom_line(aes(y=V1),color="blue")
exv[1,]
ggplot(exv,aes(1:15)) + geom_line(aes(y=exv[1,]),color="blue")
ggplot(exv,aes(1:15)) + geom_line(aes(y=exv[1]),color="blue")
ggplot(exv,aes(1:15)) + geom_line(aes(y=exv[,1]),color="blue")
yn = 15
xn = 500
exv = data.frame()
trueparm = sample(c(0.1,0.5,0.9),xn,replace=TRUE)
for (i in 1:xn){
dist = c(1/3,1/3,1/3)
for (j in 1:yn){
exv[i,j] = getexpected(dist)
dist = valsimupdate(dist,rbinom(1,1,trueparm[i]))
}
}
exv
exv[1,]
exv[1,15]
exv[1,16] = "test"
exv
exv[1,]
exv[1,]
exv[,16]
exv[,16] = trueparm
exv
ggplot(exv,aes(1:15)) + geom_line(aes(y=exv[1,1:15]),color="blue")
ggplot(exv,aes(1:15)) + geom_line(aes(y=exv[1,]),color="blue")
exv
exv[1,]
exv[1,1:15]
ggplot(exv,aes(1:15)) + geom_line(aes(y=exv[1,1:15]),color="blue")
for (i in 1:xn){
dist = c(1/3,1/3,1/3)
for (j in 1:yn){
exv[i,j] = getexpected(dist)
dist = valsimupdate(dist,rbinom(1,1,trueparm[i]))
}
}
yn = 15
xn = 500
exv = data.frame()
trueparm = sample(c(0.1,0.5,0.9),xn,replace=TRUE)
for (i in 1:xn){
dist = c(1/3,1/3,1/3)
for (j in 1:yn){
exv[i,j] = getexpected(dist)
dist = valsimupdate(dist,rbinom(1,1,trueparm[i]))
}
}
ggplot(exv,aes(1:15)) + geom_line(aes(y=exv[1,]),color="blue")
ggplot(exv,aes(1:15)) + geom_line(aes(y=exv[,1]),color="blue")
exv
exv[,1]
exv[1,]
ggplot(exv,aes(1:15)) + geom_line(aes(y=exv[1,]),color="blue")
yn = 15
xn = 500
exv = data.frame()
trueparm = sample(c(0.1,0.5,0.9),xn,replace=TRUE)
for (i in 1:xn){
dist = c(1/3,1/3,1/3)
for (j in 1:yn){
exv[j,i] = getexpected(dist)
dist = valsimupdate(dist,rbinom(1,1,trueparm[i]))
}
}
ggplot(exv,aes(1:15)) + geom_line(aes(y=exv[,1]),color="blue")
ggplot(exv,aes(1:15)) + geom_line(aes(y=exv[1:15,1]),color="blue")
exv[16,]
exv[16,] = trueparm
ggplot(exv,aes(1:15)) + geom_line(aes(y=exv[1:15,1]),color="blue")
ggplot(exv,aes(1:15)) + geom_line(aes(y=exv[1:15,1]),color="blue")
yn = 15
xn = 500
exv = data.frame()
trueparm = sample(c(0.1,0.5,0.9),xn,replace=TRUE)
for (i in 1:xn){
dist = c(1/3,1/3,1/3)
for (j in 1:yn){
exv[j,i] = getexpected(dist)
dist = valsimupdate(dist,rbinom(1,1,trueparm[i]))
}
}
ggplot(exv,aes(1:15)) + geom_line(aes(y=exv[1:15,1]),color="blue")
ggplot(exv,aes(1:15)) + geom_line(aes(y=exv[1:15,2]),color="blue")
ggplot(exv,aes(1:15)) + geom_line(aes(y=exv[,2]),color="blue")
yn = 8
xn = 500
exv = data.frame()
trueparm = sample(c(0.1,0.5,0.9),xn,replace=TRUE)
for (i in 1:xn){
dist = c(1/3,1/3,1/3)
for (j in 1:yn){
exv[j,i] = getexpected(dist)
dist = valsimupdate(dist,rbinom(1,1,trueparm[i]))
}
}
ggplot(exv,aes(1:15)) + geom_line(aes(y=exv[,2]),color="blue")
ggplot(exv,aes(1:8)) + geom_line(aes(y=exv[,2]),color="blue")
yn = 10
xn = 500
exv = data.frame()
trueparm = sample(c(0.1,0.5,0.9),xn,replace=TRUE)
for (i in 1:xn){
dist = c(1/3,1/3,1/3)
for (j in 1:yn){
exv[j,i] = getexpected(dist)
dist = valsimupdate(dist,rbinom(1,1,trueparm[i]))
}
}
ggplot(exv,aes(1:yn))
cc = apply(trueparm,function(x){
if (x==0.1){
return "blue"
} else if (x==0.5){
return "red"
} else{
return "green"
}
})
cc = apply(trueparm,function(x){
cc = apply(trueparm,function(x){
return ("blue)"
} else if (x==0.5){
return ("red")
} else{
return ("green")
}
})
cc = apply(trueparm,function(x){
if (x==0.1){
c = "blue"
} else if (x==0.5){
c= "red"
} else{
c= "green"
}
return (c)
})
?apply
?sapply
cc = lapply(trueparm,function(x){
if (x==0.1){
c = "blue"
} else if (x==0.5){
c= "red"
} else{
c= "green"
}
return (c)
})
cc
cc[1]
cc[1][1]
cc = vapply(trueparm,function(x){
if (x==0.1){
c = "blue"
} else if (x==0.5){
c= "red"
} else{
c= "green"
}
return (c)
})
cc = sapply(trueparm,function(x){
if (x==0.1){
c = "blue"
} else if (x==0.5){
c= "red"
} else{
c= "green"
}
return (c)
})
cc
g = ggplot(exv,aes(1:yn))
for (i in 1:xn){
g = g + + geom_line(aes(y=exv[,i]),color=cc[i])
}
for (i in 1:xn){
g = g + geom_line(aes(y=exv[,i]),color=cc[i])
}
g
exv
View(exv)
g = ggplot(exv,aes(1:yn))
g
g +   geom_line(aes(y=exv[,1]),color=cc[1])
g = g +   geom_line(aes(y=exv[,1]),color=cc[1])
g
g = g + geom_line(aes(y=exv[,2]),color=cc[2])
g
g = g +   geom_line(aes(y=exv[,1]),color=cc[1]) + geom_line(aes(y=exv[,2]),color=cc[2])
g = g +   geom_line(aes(y=exv[,1]),color=cc[1]) + geom_line(aes(y=exv[,2]),color=cc[2])
g = g + geom_line(aes(y=exv[,2]),color=cc[2])
g = ggplot(exv,aes(1:yn))
g =
g +   geom_line(aes(y=exv[,1]),color=cc[1]) + geom_line(aes(y=exv[,2]),color=cc[2])
plot(exv[,1])
plot(exv[,1],type=l)
plot(exv[,1],type='l')
plot(exv[,1],type='l',col=alpha(cc[1],0.4))
for (i in 2:xn){
lines(exv[,i],col=alpha(cc[i],0.4))
}
exv = data.frame()
trueparms = c(0.9,0.1,0.5)
for (i in 1:xn){
dist = c(1/3,1/3,1/3)
for (j in 1:yn){
exv[j,i] = getexpected(dist)
dist = valsimupdate(dist,rbinom(1,1,trueparm[i]))
}
}
exv
View(exv)
yn = 15
xn = 3
exv = data.frame()
trueparms = c(0.9,0.1,0.5)
for (i in 1:xn){
dist = c(1/3,1/3,1/3)
for (j in 1:yn){
exv[j,i] = getexpected(dist)
dist = valsimupdate(dist,rbinom(1,1,trueparm[i]))
}
}
View(exv)
cc = sapply(trueparm,function(x){
if (x==0.1){
c = "blue"
} else if (x==0.5){
c= "red"
} else{
c= "green"
}
return (c)
})
plot(exv[,1],type='l',col=alpha(cc[1],0.4),xlab = "Observations",y = "Change in Expected Value")
plot(exv[,1],type='l',col=alpha(cc[1],0.4),xlab = "Observations",ylab = "Change in Expected Value")
plot(exv[,1],type='l',col=alpha(cc[1],0.4),xlab = "Observations",ylab = "Change in Expected Value",xlim=c(-0.05,0.05))
plot(exv[,1],type='l',col=alpha(cc[1],0.4),xlab = "Observations",ylab = "Change in Expected Value",ylim=c(-0.05,0.05))
plot(exv[,1],type='l',col=alpha(cc[1],0.4),xlab = "Observations",ylab = "Change in Expected Value",ylim=c(-0.01,0.1))
plot(exv[,1],type='l',col=alpha(cc[1],0.4),xlab = "Observations",ylab = "Change in Expected Value",ylim=c(-0.01,0.5))
plot(exv[,1],type='l',col=alpha(cc[1],0.4),xlab = "Observations",ylab = "Change in Expected Value",ylim=c(-0.5,0.5))
for (i in 2:xn){
lines(exv[,i],col=alpha(cc[i],0.4))
}
cc = c("blue","red","green")
linestyle = c(1,3,4)
plot(exv[,1],type='l',col=alpha(cc[1],0.4),xlab = "Observations",ylab = "Change in Expected Value",ylim=c(-0.5,0.5))
for (i in 2:xn){
lines(exv[,i],col=alpha(cc[i],0.4),lty=linestyle[i])
}
plot(exv[,1],type='l',col=alpha(cc[1],0.4),xlab = "Observations",ylab = "Change in Expected Value",ylim=c(-0.5,0.5))
for (i in 2:xn){
lines(exv[,i],col=alpha(cc[i],1),lty=linestyle[i])
}
plot(exv[,1],type='l',col=alpha(cc[1],0.4),xlab = "Observations",ylab = "Change in Expected Value",ylim=c(-0.3,0.3))
for (i in 2:xn){
lines(exv[,i],col=alpha(cc[i],1),lty=linestyle[i])
}
plot(exv[,1],type='l',col=alpha(cc[1],0.4),xlab = "Observations",ylab = "Change in Expected Value",ylim=c(-0.3,0.3))
for (i in 2:xn){
lines(exv[,i],col=alpha(cc[i],2),lty=linestyle[i])
}
lines(exv[,i],col=alpha(cc[i],1),lty=linestyle[i])
plot(exv[,1],type='l',col=alpha(cc[1],0.4),xlab = "Observations",ylab = "Change in Expected Value",ylim=c(-0.3,0.3))
for (i in 2:xn){
lines(exv[,i],col=alpha(cc[i],1),lty=linestyle[i])
}
plot(exv[,1],type='l',col=alpha(cc[1],0.4),xlab = "Observations",ylab = "Change in Expected Value",ylim=c(-0.3,0.3),lwd=3)
for (i in 2:xn){
lines(exv[,i],col=alpha(cc[i],1),lty=linestyle[i],lwd=3)
}
legend(70,.8, legend=c("p=0.9","p=0.1","p=0.5"), col=c("blue","red","green"),cex=.8, lty=c(1,3,4),bg="lightblue",lwd=3)
legend(4,.8, legend=c("p=0.9","p=0.1","p=0.5"), col=c("blue","red","green"),cex=.8, lty=c(1,3,4),bg="lightblue",lwd=3)
legend(4,-.2, legend=c("p=0.9","p=0.1","p=0.5"), col=c("blue","red","green"),cex=.8, lty=c(1,3,4),bg="lightblue",lwd=3)
legend(2,-.3, legend=c("p=0.9","p=0.1","p=0.5"), col=c("blue","red","green"),cex=.8, lty=c(1,3,4),bg="lightblue",lwd=3)
legend(2,-.2, legend=c("p=0.9","p=0.1","p=0.5"), col=c("blue","red","green"),cex=.8, lty=c(1,3,4),bg="lightblue",lwd=3)
legend(2,-.2, legend=c("p=0.9","p=0.1","p=0.5"), col=c("blue","red","green"),cex=1, lty=c(1,3,4),bg="lightblue",lwd=3)
plot(exv[,1],type='l',col=alpha(cc[1],0.4),xlab = "Observations",ylab = "Change in Expected Value",ylim=c(-0.3,0.3),lwd=3)
for (i in 2:xn){
lines(exv[,i],col=alpha(cc[i],1),lty=linestyle[i],lwd=3)
}
legend(2,-.2, legend=c("p=0.9","p=0.1","p=0.5"), col=c("blue","red","green"),cex=1, lty=c(1,3,4),bg="lightblue",lwd=3)
cc = c("darkorchid","firebrick","orange4")
linestyle = c(1,3,4)
plot(exv[,1],type='l',col=alpha(cc[1],0.4),xlab = "Observations",ylab = "Change in Expected Value",ylim=c(-0.3,0.3),lwd=3)
for (i in 2:xn){
lines(exv[,i],col=alpha(cc[i],1),lty=linestyle[i],lwd=3)
}
plot(exv[,1],type='l',col=alpha(cc[1],0.8),xlab = "Observations",ylab = "Change in Expected Value",ylim=c(-0.3,0.3),lwd=3)
for (i in 2:xn){
lines(exv[,i],col=alpha(cc[i],1),lty=linestyle[i],lwd=3)
}
cc = c("darkorchid","firebrick","olivedrab4")
linestyle = c(1,3,4)
plot(exv[,1],type='l',col=alpha(cc[1],0.8),xlab = "Observations",ylab = "Change in Expected Value",ylim=c(-0.3,0.3),lwd=3)
for (i in 2:xn){
lines(exv[,i],col=alpha(cc[i],1),lty=linestyle[i],lwd=3)
}
plot(exv[,1],type='l',col=alpha(cc[1],0.3),xlab = "Observations",ylab = "Change in Expected Value",ylim=c(-0.3,0.3),lwd=3)
for (i in 2:xn){
lines(exv[,i],col=alpha(cc[i],1),lty=linestyle[i],lwd=3)
}
legend(2,-.2, legend=c("p=0.9","p=0.1","p=0.5"), col=cc,cex=1, lty=c(1,3,4),bg="lightblue",lwd=3)
act.y = rbinom(5,3,.2)
act.y
act.y = rbinom(10,8,.2)
act.y
act.y = rbinom(20,8,.2)
act.y
sum(act.y)
pr.a = 1
pr.b = 1
k=20
n=8
total = n*k
act.y = rbinom(k,n,.2)
act.y
pr.a = 1
pr.b = 1
x = sum(act.y)
post.a = pr.a + x
post.b = pr.b +(n*k) - x
post.a
post.b
32/130
post.ex = post.a / (post.a+post.b)
post.ex
y.rep = rbinom(k,n,post.ex)
y.rep
sum(y.rep)
total
pnorm
pnorm(2.01)
1- pnorm(2.01)
slices = c(1/3,1/3,1/3)
pie(slices)
lab = c("black","white","neutral")
lab = c("black","white","neutral")
lab = c("b:1/3","w:1/3","n:1/3l")
pie(slices, labels=lab)
?pie
pie(slices, labels=lab,col=c("black","white","grey"))
lab = c("b:1/3","w:1/3","n:1/3")
slices = c(1/3,1/3,1/3)
pie(slices, labels=lab,col=c("black","white","grey"))
plot(c(1/3,1/3,1/3))
histo(c(1/3,1/3,1/3))
hist(c(1/3,1/3,1/3))
lab = c("b:1/3","w:1/3","n:1/3l")
ba
bar
barplot(c(1/3,1/3,1/3))
barplot(c(1/3,1/3,1/3),ylim=c(0,1))
barplot(c(1/3,1/3,1/3),ylim=c(0,1),col=c("black","white","grey"))
barplot(c(1/3,1/3,1/3),ylim=c(0,1),col=c("black","white","grey"),lab=c("B","W","N"))
barplot(c(1/3,1/3,1/3),ylim=c(0,1),col=c("black","white","grey"),lab=c("B","W","N"))
barplot(c(1/3,1/3,1/3),ylim=c(0,1),col=c("black","white","grey"))
barplot(c(1/3,1/3,1/3),ylim=c(0,1),col=c("black","white","grey"),xlab=c("black","white","grey"))
barplot(c(1/3,1/3,1/3),ylim=c(0,1),col=c("black","white","grey"))
View(bdf1)

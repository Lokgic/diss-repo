a = 0.9
b = 0.5
c = 0.1
pa = 1/3
pb = 1/3
pc = 1/3
e = a^4*pa + b^4*pb + c^4*pc
poa = (pa*a^4)/e
pob = (pb*b^4)/e
poc = (pc*c^4)/e
bet1 = 10000* (a^4*(1-a) + b^4*(1-b) + c^4*(1-c))/3
bet2= (1-e) *1300
bet3 = (e)*300
e
e
0.2+.5+.8
1.5/3
e*.5
1.5/3 *10000
e*.5 * 10000
bet1 = 10000* (a^4*(1-a) + b^4*(1-b) + c^4*(1-c))/3
a = 0.9
b = 0.5
c = 0.1
pa = 1/3
pb = 1/3
pc = 1/3
e = a^4*pa + b^4*pb + c^4*pc
poa = (pa*a^4)/e
pob = (pb*b^4)/e
poc = (pc*c^4)/e
bet1 = 10000* (a^4*(1-a) + b^4*(1-b) + c^4*(1-c))/3
(a^4 + b^4 + c^4)/3
ibee = ibea*a+ibeb*b+ibec*c
ibea = 0.999
bonus = ibea - poa
ibeb = pob - bonus
ibec = 1-ibea-ibeb
ibee = ibea*a+ibeb*b+ibec*c
bet4 = 10000*(1-0.9)
5!
factorio(2)
go = T
a = 1
b = 1
while (go){
x = rbinom(1,1,.2)
if (x==0){
b = b + 1
} else{
a = a + 1
}
if (pbeta(0.2,a,b)<0.01 ){
go = F
}
}
a/a+b
a/(a+b)
for (t in 1:20){
i = 1
go = T
a = 1
b = 1
while (go){
x = rbinom(1,1,.2)
if (x==0){
b = b + 1
} else{
a = a + 1
}
if (pbeta(0.2,a,b)<0.05 ){
av[t] = a
bv[t] = b
iv[t] = i
go = F
} else if (n>1000){
i = i +1
n = 0
x = 0
}
}
}
av = vector(mode="integer",length = 20)
bv = vector(mode="integer",length = 20)
iv = vector(mode="integer",length = 20)
for (t in 1:20){
i = 1
go = T
a = 1
b = 1
while (go){
x = rbinom(1,1,.2)
if (x==0){
b = b + 1
} else{
a = a + 1
}
if (pbeta(0.2,a,b)<0.05 ){
av[t] = a
bv[t] = b
iv[t] = i
go = F
} else if (n>1000){
i = i +1
a=1
b=1
}
}
}
av = vector(mode="integer",length = 20)
bv = vector(mode="integer",length = 20)
iv = vector(mode="integer",length = 20)
for (t in 1:20){
i = 1
go = T
a = 1
b = 1
while (go){
x = rbinom(1,1,.2)
if (x==0){
b = b + 1
} else{
a = a + 1
}
if (pbeta(0.2,a,b)<0.05 ){
av[t] = a
bv[t] = b
iv[t] = i
go = F
} else if ((a+b)>1000){
i = i +1
a=1
b=1
}
}
}
a
av
bv
iv
binom.test(118,500,0.2,alternative="greater")
pbinom(20,100,0.2)
dbinom(0:20,100,0.2)
sum(dbinom(0:20,100,0.2))
pbinom(25,100,0.2)
pbinom(25,100,0.2) - pbinom(5,100,0.2)
pbinom(25,100,0.2) - pbinom(15,100,0.2)
pbinom(25,100,0.2)
pbinom(30,100,0.2)
pbinom(28,100,0.2)
pbinom(25,100,0.2)
pbinom(26,100,0.2)
pbinom(27,100,0.2)
1-pbinom(27,100,0.2)
pbinom(27,100,0.2)
pbinom(268,750,0.2)
pbinom(168,750,0.2)
pbinom(167,750,0.2)
binom.test()
?binom.test
binom.test(168,750,0.2,alternative = "greater")
rv = vector(mode="integer",length = 20)
for (t in 1:20){
i = 1
go = T
n = 0
x = 0
while (go){
n = n + 1
x = x + rbinom(1,1,.2)
result = binom.test(x,n,0.2,alternative="greater")
if (result$p.value<0.01 ){
rv[t] = i
go = F
} else if (n>1000){
i = i +1
n = 0
x = 0
}
}
}
0.2^5
0.2^3
0.5^3
0.5^4
l = 50
rv = vector(mode="integer",length = l)
xv = vector(mode="integer",length = l)
nv = vector(mode="integer",length = l)
for (t in 1:l){
i = 1
go = T
n = 0
x = 0
while (go){
n = n + 1
x = x + rbinom(1,1,.2)
result = binom.test(x,n,0.2,alternative="greater")
if (result$p.value<0.05 ){
rv[t] = i
nv[t] = n
xv[t] = x
go = F
} else if (n>1000){
i = i +1
n = 0
x = 0
}
}
}
rv
summary(rv)
hist(rv)
l = 1000
rv = vector(mode="integer",length = l)
xv = vector(mode="integer",length = l)
nv = vector(mode="integer",length = l)
pv = vector(mode="integer",length = l)
for (t in 1:l){
i = 1
go = T
n = 0
x = 0
while (go){
n = n + 1
x = x + rbinom(1,1,.2)
result = binom.test(x,n,0.2,alternative="greater")
if (result$p.value<0.05 ||n>2000){
pv[t] = result$p.value
nv[t] = n
xv[t] = x
go = F
}
}
}
pv
pv[pv<0.05]
df-f = data.frame(pv,nv,xv)
dff = data.frame(pv,nv,xv)
View(dff)
l = 1000
rv = vector(mode="integer",length = l)
xv = vector(mode="integer",length = l)
nv = vector(mode="integer",length = l)
pv = vector(mode="integer",length = l)
for (t in 1:l){
i = 1
go = T
n = 0
x = 0
while (go){
n = n + 1
x = x + rbinom(1,1,.2)
result = binom.test(x,n,0.2,alternative="greater")
if (result$p.value<0.05 ||n=2000){
pv[t] = result$p.value
nv[t] = n
xv[t] = x
go = F
}
}
}
l = 1000
rv = vector(mode="integer",length = l)
xv = vector(mode="integer",length = l)
nv = vector(mode="integer",length = l)
pv = vector(mode="integer",length = l)
for (t in 1:l){
i = 1
go = T
n = 0
x = 0
while (go){
n = n + 1
x = x + rbinom(1,1,.2)
result = binom.test(x,n,0.2,alternative="greater")
if (result$p.value<0.05 ||n=2000){
pv[t] = result$p.value
nv[t] = n
xv[t] = x
go = F
}
}
}
for (t in 1:l){
i = 1
go = T
n = 0
x = 0
while (go){
n = n + 1
x = x + rbinom(1,1,.2)
result = binom.test(x,n,0.2,alternative="greater")
if (result$p.value<0.05 ||n==2000){
pv[t] = result$p.value
nv[t] = n
xv[t] = x
go = F
}
}
}
dff = data.frame(pv,nv,xv)
dff[dff$pv>0.05]
dff[dff$pv<0.05]
dff[pv<0.05]
dff$pv[pv<0.05]
dff[dff$pv<0.05]
dff[dff$pv=0.05]
dff[dff$pv==0.05]
dff[dff$pv<0.05]
dff$pv
dff$pv > 0.05
dff$pv < 0.05
dff$005 = dff$pv < 0.05
dff$5 = dff$pv < 0.05
dff$five = dff$pv < 0.05
dff$one = dff$pv < 0.01
dff$five[dff$five==T]
sum(dff$five[dff$five==T])
dff[dff$five==T]
dff
dff[1,1]
dff[,dff$five==T]
dff[dff$five==T,]
dff$xv[dff$five==T]
summary(dff)
summary(dff[dff$five==T,])
keep = c("pv","nv","xv","five")
df1 = dff[keep]
View(df1)
setwd("~/Dropbox/diss/repo/src")
write.csv(df1,file="simFreqStopping.csv")
summary(dff[dff$five==F,])
dff$nv[dff$nv<500]
count
summary(dff$nv[dff$nv<500])
nbinom
NegBinomial
NegBinomial
dnbinom
?dnbinom
dnbinom(1,2,0.5)
dnbinom(1,1,0.5)
dnbinom(1,10,0.5)
dnbinom(5,10,0.5)
dnbinom(1,10,0.5)
dnbinom(1,10,0.8)
dnbinom(1,1,0.8)
dnbinom(1,1,0.5)
dnbinom(472,128,0.2)
